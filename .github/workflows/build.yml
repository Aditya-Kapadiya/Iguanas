name: Build
on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # python-version: [3.7, 3.8, 3.9]
        os: [windows-latest]
        python-version: [3.7]
    env:
      OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
      SPARK_LOCAL_IP: 127.0.0.1
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    # - uses: actions/setup-java@v2
    #   with:
    #     distribution: 'microsoft'
    #     java-version: '11'
    # - uses: actions/setup-java@v1
    #   with:
    #     java-version: 1.8
    # - name: Install matplotlib deps manually if windows-latest
    #   if: matrix.os == 'windows-latest'
    #   run: |
    #     # $CONDA is an environment variable pointing to the root of the miniconda directory
    #     # echo $CONDA/bin >> $GITHUB_PATH
    #     $Env:Path += $CONDA
    #     # apt-get install freetype6-dev
    #     # apt-get install pkg-config
    #     conda install matplotlib
    - name: Install dependencies
      run: |        
        python -m pip install --upgrade pip        
        python -m pip install --upgrade setuptools
        pip install flake8 pytest 
        pip install .        
        pip install .[dev]
        pip install .[spark]  
        python -m ipykernel install --user --name iguanas
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics    
    - name: Unit tests
      run: |                             
        # coverage run --omit iguanas/*/test*.py -m pytest -vv iguanas && coverage report && coverage xml

        shopt -s extglob
        pytest ./iguanas/*/tests/!(*spark*)
        shopt -u extglob

        # pytest iguanas/*/examples/ --nbmake --nbmake-kernel=iguanas
        # pytest examples/ --nbmake --nbmake-kernel=iguanas             
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.xml
    